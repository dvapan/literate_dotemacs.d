#+TITLE: Starter Kit Lisp
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter Kit Lisp
Support for editing list dialects including [[* Emacs Lisp][Emacs Lisp]], [[* Scheme][Scheme]],
[[*%20Common%20Lisp][Common Lisp]], and [[* Clojure][Clojure]].

** Define keys
   :PROPERTIES:
   :CUSTOM_ID: keys
   :END:
#+name: starter-kit-define-lisp-keys
#+begin_src emacs-lisp 
  (define-key read-expression-map (kbd "TAB") 'lisp-complete-symbol)
  (define-key lisp-mode-shared-map (kbd "C-c l") "lambda")
  (define-key lisp-mode-shared-map (kbd "RET") 'reindent-then-newline-and-indent)
  (define-key lisp-mode-shared-map (kbd "C-\\") 'lisp-complete-symbol)
  (define-key lisp-mode-shared-map (kbd "C-c v") 'eval-buffer)
#+end_src

** Paredit
   :PROPERTIES:
   :CUSTOM_ID: paredit
   :END:
[[http://www.emacswiki.org/emacs/ParEdit][Paredit]] might seem weird at first, but it really makes writing lisp a
much more comfortable experience.  This is especially useful in
combination with the sexp movement functions (=C-M-f= forward, =C-M-b=
back, =C-M-u= up, =C-M-d= down)


#+begin_src emacs-lisp
(starter-kit-install-if-needed 'paredit)
#+end_src

#+begin_src emacs-lisp
(require 'paredit)
(defun turn-on-paredit ()
  (paredit-mode +1))
#+end_src

: ;; (eval-after-load 'paredit
: ;;      ;; Not sure why paredit behaves this way with comments; it's annoying
: ;;   '(define-key paredit-mode-map (kbd ";")   'self-insert-command))

** Non-obtrusive parenthesis faces
   :PROPERTIES:
   :CUSTOM_ID: parenthesis-faces
   :END:
#+begin_src emacs-lisp
(defface starter-kit-paren-face
   '((((class color) (background dark))
      (:foreground "grey50"))
     (((class color) (background light))
      (:foreground "grey55")))
   "Face used to dim parentheses."
   :group 'starter-kit-faces)
#+end_src

** Emacs Lisp
   :PROPERTIES:
   :CUSTOM_ID: emacs-lisp
   :END:

#+begin_src emacs-lisp
(add-hook 'emacs-lisp-mode-hook 'turn-on-eldoc-mode)
(add-hook 'emacs-lisp-mode-hook 'run-starter-kit-coding-hook)
(add-hook 'emacs-lisp-mode-hook 'starter-kit-remove-elc-on-save)
;; (add-hook 'emacs-lisp-mode-hook 'idle-highlight)
(add-hook 'emacs-lisp-mode-hook 'turn-on-paredit)
(define-key emacs-lisp-mode-map (kbd "C-c v") 'eval-buffer)

(defun starter-kit-remove-elc-on-save ()
  "If you're saving an elisp file, likely the .elc is no longer valid."
  (make-local-variable 'after-save-hook)
  (add-hook 'after-save-hook
            (lambda ()
              (if (file-exists-p (concat buffer-file-name "c"))
                  (delete-file (concat buffer-file-name "c"))))))

(font-lock-add-keywords 'emacs-lisp-mode
			'(("(\\|)" . 'starter-kit-paren-face)))
#+end_src

** Scheme
   :PROPERTIES:
   :CUSTOM_ID: scheme
   :END:

#+begin_src emacs-lisp
  (add-hook 'scheme-mode-hook 'run-starter-kit-coding-hook)
  ;;(add-hook 'scheme-mode-hook 'idle-highlight)
  (add-hook 'scheme-mode-hook 'turn-on-paredit)

  (font-lock-add-keywords 'scheme-mode
                          '(("(\\|)" . 'starter-kit-paren-face)))

#+end_src

** Racket
#+begin_src emacs-lisp
  (add-hook 'racket-mode-hook 'run-starter-kit-coding-hook)
  ;;(add-hook 'racket-mode-hook 'idle-highlight)
  (add-hook 'racket-mode-hook 'turn-on-paredit)
  (add-hook 'racket-mode-hook 'auto-complete-mode)
  (font-lock-add-keywords 'racket-mode
                          '(("(\\|)" . 'starter-kit-paren-face)))
  ;; make the tab key do indent AND completion
  (set-default 'tab-always-indent 'complete)

#+end_src

** Common Lisp
   :PROPERTIES:
   :CUSTOM_ID: common-lisp
   :END:

#+begin_src emacs-lisp
  (add-hook 'lisp-mode-hook 'run-starter-kit-coding-hook)
  ;; (add-hook 'lisp-mode-hook 'idle-highlight)
  (add-hook 'lisp-mode-hook 'turn-on-paredit)
  (font-lock-add-keywords 'lisp-mode
              '(("(\\|)" . 'starter-kit-paren-face)))
  (require 'cl)
  (setq-default inferior-lisp-program "sbcl")

  (setq-default lisp-body-indent 2)
  (setq-default lisp-indent-function 'common-lisp-indent-function)

#+end_src
